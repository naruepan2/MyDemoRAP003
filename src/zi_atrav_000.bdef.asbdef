managed; //implementation in class ZBP_ATRAV_000 unique;
strict ( 2 );
with draft;

define behavior for ZI_ATRAV_000 alias Travel
implementation in class ZBP_ATRAV_000 unique
persistent table zrap_atrav_000
draft table zrap_dtrav_000
etag master LastChangedAt
lock master total etag LocalLastChangedAt
authorization master ( global )

{
  //  field ( mandatory : create )
  //   Client;

  field ( readonly )
  //  TravelUUID,
  LocalLastChangedAt,
  LastChangedAt,
  LastChangedBy;

  field ( numbering : managed, readonly : update )
  TravelUUID;

  field ( readonly : update )
  TravelID;

  //  field ( readonly : update )
  //   Client;

  create;
  update;
  delete;

  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

  action TestAction1 parameter ZA_DMO_ACTION_PARAMETER_V1;

  //  action TestParamAction1 deep parameter ZA_DMO_ABSTACT_ROOT_000 result [1] $self;
  mapping for zrap_atrav_000
    {

      //    Client = client;
      TravelUUID         = travel_uuid;
      TravelID           = travel_id;
      BeginDate          = begin_date;
      EndDate            = end_date;
      BookingFee         = booking_fee;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      Description        = description;
      OverallStatus      = overall_status;
      Attachment         = attachment;
      Mimetype           = mimetype;
      Filename           = filename;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }



  association _Booking { create; with draft; }
}

define behavior for ZI_ABOOK_000 alias Booking
implementation in class ZBP_ABOOK_000 unique
persistent table zrap_abook_000
draft table zrap_dbook_000
etag master LastChangedAt
lock dependent by _Travel
authorization dependent by _Travel
{
  update;
  delete;

  field ( readonly )
  TravelUUID,
  //  BookingUuid,
  LocalLastChangedAt,
  LastChangedAt,
  LastChangedBy;

  field ( numbering : managed, readonly : update )
  //    TravelUUID,
  BookingUuid;

  field ( readonly : update )
  BookingId;
  mapping for zrap_abook_000 corresponding
    {
      BookingUuid        = booking_uuid;
      TravelUuid         = travel_uuid;
      BookingId          = booking_id;
      BookingDate        = booking_date;
      CarrierId          = carrier_id;
      ConnectionId       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }


  association _Travel { with draft; }
  association _Supplement { create; with draft; }

}

define behavior for ZI_ASUPPL_000 alias Supplement
//implementation in class ZBP_ASUPPL_000 unique
persistent table zrap_asuppl_000
draft table zrap_dsuppl_000
etag master LastChangedAt
lock dependent by _Travel
authorization dependent by _Travel
{
  update;
  delete;

  field ( readonly )
  TravelUUID,
  BookingUuid,
  //  SuppleUuid,
  LocalLastChangedAt,
  LastChangedAt,
  LastChangedBy;

  field ( numbering : managed, readonly : update )
  //    TravelUUID,
  //    BookingUuid,
  SuppleUuid;

  field ( readonly : update )
  Suppleid;
  mapping for zrap_asuppl_000 corresponding
    {
      BookingUuid        = booking_uuid;
      TravelUuid         = travel_uuid;
      SuppleUuid         = supple_uuid;
      Price              = price;
      CurrencyCode       = currency_code;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      LastChangedBy      = last_changed_by;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }



  association _Travel { with draft; }
  association _Booking { with draft; }
}